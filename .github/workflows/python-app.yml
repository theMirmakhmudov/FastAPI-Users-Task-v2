name: FastAPI CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "main" ]

jobs:
  django_ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest

  deploy_fastapi:
    runs-on: ubuntu-latest
    needs: django_ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy FastAPI
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}  # GitHub Secrets orqali IP manzilini yoki domenni olamiz
          username: ${{ secrets.SERVER_USER }}  # GitHub Secrets orqali server foydalanuvchi nomi
          key: ${{ secrets.SERVER_SSH_KEY }}  # GitHub Secrets orqali SSH kaliti
          script: |
            set -e

            # Define the full path to the app directory
            REPO_DIR="/root/app"

            # Check if the app directory exists
            if [ ! -d "$REPO_DIR" ]; then
              echo "App directory not found, cloning repository..."
              git clone https://github.com/theMirmakhmudov/FastAPI-Users-Task-v2.git $REPO_DIR
            else
              cd $REPO_DIR
              echo "App directory found, pulling latest changes..."
              git pull origin master
            fi

            cd $REPO_DIR

            # Set up virtual environment if not already created
            if [ ! -d "venv" ]; then
              echo "Setting up virtual environment..."
              python3 -m venv venv
            fi

            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Check if a FastAPI app is already running with Uvicorn and kill it if needed
            if pgrep -f "uvicorn"; then
              echo "Stopping existing FastAPI app..."
              pkill -f "uvicorn"
            fi

            # Start the FastAPI app using Uvicorn in the background
            echo "Starting FastAPI app with Uvicorn..."
            nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &
